'From nsboot-2011-08-01 of 1 August 2011 [latest update: #10966] on 1 August 2011 at 2:40:22 pm'!!ContextPart methodsFor: 'private-exceptions' stamp: 'ryan 8/1/2011 14:37'!canHandleSignal: exception	"Sent to handler (on:do:) contexts only.  If my exception class (first arg) handles exception then return true, otherwise forward this message to the next handler context.  If none left, return false (see nil>>canHandleSignal:)"	^ ((self isInterestedIn: exception) and: [self tempAt: 3])		or: [self nextHandlerContext canHandleSignal: exception].! !!ContextPart methodsFor: 'private-exceptions' stamp: 'ryan 8/1/2011 14:40'!handleSignal: exception	"Sent to handler (on:do:) contexts only.  If my exception class (first arg) handles exception then execute my handle block (second arg), otherwise forward this message to the next handler context.  If none left, execute exception's defaultAction (see nil>>handleSignal:)."	| val |	((self isInterestedIn: exception) and: [self tempAt: 3]) ifFalse: [		^ self nextHandlerContext handleSignal: exception].	exception privHandlerContext: self contextTag.	self tempAt: 3 put: false.  "disable self while executing handle block"	val := [(self tempAt: 2) cull: exception ]		ensure: [self tempAt: 3 put: true].	self return: val.  "return from self if not otherwise directed in handle block"! !