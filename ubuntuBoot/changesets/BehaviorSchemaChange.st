"
   Licensed under the Squeak License (the ''License''); you may not use this file except in compliance with the License.  You may obtain a copy of the License at  http://www.squeak.org/SqueakLicense/
"!
'From nsboot-2008-04-25.00 of 25 April 2008 [latest update: #0] on 28 April 2008 at 11:05:58 pm'!!Behavior methodsFor: 'testing' stamp: 'sd 4/28/2008 23:05'!shouldNotBeRedefined	^false! !Object subclass: #Behavior	instanceVariableNames: 'superclass methodDict format mixinSlot enclosingObjectSlot'	classVariableNames: 'ObsoleteSubclasses'	poolDictionaries: ''	category: 'Kernel-Classes'!ClassDescription subclass: #Class	instanceVariableNames: 'subclasses name classPool sharedPools environment category metadata'	classVariableNames: ''	poolDictionaries: ''	category: 'Kernel-Classes'!!Behavior methodsFor: 'testing' stamp: 'sd 3/28/2003 15:07'!shouldNotBeRedefined	"Return true if the receiver should not be redefined.	The assumption is that compact classes,	classes in Smalltalk specialObjects and 	Behaviors should not be redefined"	^(self environment compactClassesArray includes: self)		or:[(self environment specialObjectsArray includes: self)			or:[self isKindOf: self]]! !!DefiningClassMetadata class methodsFor: 'as yet unclassified' stamp: 'Ahe 2/26/2008 14:05'! of: cls "<Class> ^<DefiningClassMetadata>"	| md |	md := cls instVarAt: 14. "Class instVarIndexFor: 'metadata'"	nil = md ifTrue:		[md := DefiningClassMetadata new.		md definingClass: cls.		cls instVarAt: 14 put: md].	^md! !