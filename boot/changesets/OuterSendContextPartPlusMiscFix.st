"
   Licensed under the Squeak License (the ''License''); you may not use this file except in compliance with the License.  You may obtain a copy of the License at  http://www.squeak.org/SqueakLicense/
"!
'From nsboot-2008-09-27.00 of 27 September 2008 [latest update: #0] on 30 September 2008 at 9:12:07 pm'!!ContextPart methodsFor: 'private' stamp: 'eem 4/22/2008 17:41'!methodClass	| m |	^((m := self method) literalAt: m numLiterals) value! !!BlockContext methodsFor: 'printing' stamp: 'Ahe 9/29/2008 15:34'!printOn: aStream	| blockString truncatedBlockString code |	home == nil ifTrue: [^aStream nextPutAll: 'a BlockContext with home=nil'].	aStream nextPutAll: '[] in '.	super printOn: aStream.	[		code := self decompile	] on: UnhandledError, SyntaxErrorNotification do:		[:ex |		home printOn: aStream.		aStream nextPutAll: ' <<error during decompilation>>'.		^self].	code ifNil: [^self].	aStream nextPutAll: ' '.	blockString := (code printString replaceAll: Character cr with: Character space)						replaceAll: Character tab with: Character space.	truncatedBlockString := blockString truncateWithElipsisTo: 80.	truncatedBlockString size < blockString size ifTrue:		[truncatedBlockString := truncatedBlockString, ']}'].	aStream nextPutAll: truncatedBlockString.! !