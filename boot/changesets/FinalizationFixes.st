"
   Licensed under the Squeak License (the ''License''); you may not use this file except in compliance with the License.  You may obtain a copy of the License at  http://www.squeak.org/SqueakLicense/
"!
'From Squeak3.9 of 7 November 2006 [latest update: #7067] on 11 January 2008 at 11:36:50 am'!!ObjectFinalizerTests methodsFor: 'finalization handling' stamp: 'eem 1/11/2008 09:56'!finalize: anObject	log addLast: anObject asString, ' finalized'.! !!ObjectFinalizerTests methodsFor: 'running' stamp: 'apb 9/14/2005 08:39'!setUp	super setUp.	log := OrderedCollection new.! !!ObjectFinalizerTests methodsFor: 'tests' stamp: 'stephaneducasse 10/28/2005 21:15'!testFinalization	"self run: #testFinalization"		| repetitions |	repetitions := 100.	1 to: repetitions		do: [:i | 			log addLast: 'o' , i asString , ' created'.			Object new				toFinalizeSend: #finalize:				to: self				with: 'o' , i asString].	Smalltalk garbageCollect.	self finalizationRegistry finalizeValues.	1 to: repetitions		do: [:i | 			self assert: (log includes: 'o' , i asString , ' created').			self assert: (log includes: 'o' , i asString , ' finalized')]! !!ObjectFinalizerTests methodsFor: 'tests' stamp: 'eem 1/11/2008 09:56'!testFinalizationOfArrays	"self run: #testFinalizationOfArrays"		| repetitions |	repetitions := 100.	1 to: repetitions		do: [:i | 			log addLast: 'o' , i asString , ' created'.			(Array new: 10)				toFinalizeSend: #finalize:				to: self				with: 'o' , i asString].	Smalltalk garbageCollect.	self finalizationRegistry finalizeValues.	1 to: repetitions		do: [:i | 			self assert: (log includes: 'o' , i asString , ' created').			self assert: (log includes: 'o' , i asString , ' finalized')]! !!ObjectFinalizerTests methodsFor: 'tests' stamp: 'eem 1/11/2008 09:41'!testFinalizationOfEquals	"self run: #testFinalizationOfEquals"		| bag o |	bag := IdentityBag new.	1 to: 5 do: [:n | o := n asString copy. bag add: n. o toFinalizeSend: #remove: to: bag with: n].	1 to: 5 do: [:n | o := n asString copy. bag add: n. o toFinalizeSend: #remove: to: bag with: n].	o := nil.	Smalltalk garbageCollect.	Object finalizationRegistry finalizeValues.	1 to: 5 do: [:n | self deny: (bag includes: n)]! !!ObjectFinalizerTests methodsFor: 'tests' stamp: 'eem 1/11/2008 09:56'!testFinalizationOfPoints	"self run: #testFinalizationOfPoints"		| repetitions |	repetitions := 100.	1 to: repetitions		do: [:i | 			log addLast: 'o' , i asString , ' created'.			(Point x: i y: i * 2)				toFinalizeSend: #finalize:				to: self				with: 'o' , i asString].	Smalltalk garbageCollect.	self finalizationRegistry finalizeValues.	1 to: repetitions		do: [:i | 			self assert: (log includes: 'o' , i asString , ' created').			self assert: (log includes: 'o' , i asString , ' finalized')]! !!ObjectFinalizerTests methodsFor: 'tests' stamp: 'eem 1/11/2008 09:56'!testFinalizationOfStrings	"self run: #testFinalizationOfStrings"		| repetitions |	repetitions := 100.	1 to: repetitions		do: [:i | 			log addLast: 'o' , i asString , ' created'.			(String new: 10)				toFinalizeSend: #finalize:				to: self				with: 'o' , i asString].	Smalltalk garbageCollect.	self finalizationRegistry finalizeValues.	1 to: repetitions		do: [:i | 			self assert: (log includes: 'o' , i asString , ' created').			self assert: (log includes: 'o' , i asString , ' finalized')]! !!WeakRegistry methodsFor: 'initialize' stamp: 'eem 1/11/2008 11:09'!initialize: n	valueDictionary := WeakIdentityKeyDictionary new: n.	accessLock := Semaphore forMutualExclusion.! !"Postscript:The change set changes the class used for the valueDictionary.Make the same change to existing instances."[WeakRegistry allInstancesDo:	[:wr| | vd nkvd |	vd := wr instVarNamed: 'valueDictionary'.	vd class ~~ WeakIdentityKeyDictionary ifTrue:		[nkvd := WeakIdentityKeyDictionary new: vd basicSize.		vd associationsDo:			[:assoc| nkvd at: assoc key put: assoc value].		wr instVarNamed: 'valueDictionary' put: nkvd]]] valueUnpreemptively!