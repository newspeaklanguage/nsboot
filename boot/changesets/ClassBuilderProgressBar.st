"
   Licensed under the Squeak License (the ''License''); you may not use this file except in compliance with the License.  You may obtain a copy of the License at  http://www.squeak.org/SqueakLicense/
"!
'From Squeak3.9 of 7 November 2006 [latest update: #7067] on 5 October 2007 at 9:52:24 pm'!!ClassBuilder methodsFor: 'class definition' stamp: 'Ahe 10/5/2007 21:49'!recompile: force from: oldClass to: newClass mutate: forceMutation	"Do the necessary recompilation after changine oldClass to newClass.	If required (e.g., when oldClass ~~ newClass) mutate oldClass to newClass	and all its subclasses. If forceMutation is true force a mutation even	if oldClass and newClass are the same."	oldClass == nil ifTrue:[^ newClass].	(newClass == oldClass and:[force not and:[forceMutation not]]) ifTrue:[		^newClass].	currentClassIndex := 0.	maxClassIndex := oldClass withAllSubclasses size.	(oldClass == newClass and:[forceMutation not]) ifTrue:		[ "Recompile from newClass without mutating"		self			informUserOfActivity: 'Recompiling ', oldClass name			during:				[ newClass isSystemDefined ifFalse:[progress := nil].				newClass withAllSubclassesDo:					[ :cl |					self showProgressFor: cl.					cl compileAll]].		^newClass].	"Recompile and mutate oldClass to newClass"	self		informUserOfActivity: 'Recompiling ', oldClass name		during:			[ newClass isSystemDefined ifFalse:[progress := nil].			self mutate: oldClass to: newClass ].	^oldClass "now mutated to newClass"! !!ClassBuilder methodsFor: 'private' stamp: 'Ahe 10/5/2007 21:42'!informUserOfActivity: activity "<String>" during: aBlock	self class isSilent ifTrue:[^aBlock value].	[ :bar |		progress := bar.		aBlock value] displayingProgress: activity.	progress := nil! !!ClassBuilder methodsFor: 'private' stamp: 'Ahe 10/5/2007 21:38'!showProgressFor: aClass	"Announce that we're processing aClass"	progress == nil ifTrue:[^self].	aClass isObsolete ifTrue:[^self].	currentClassIndex := currentClassIndex + 1.	(aClass hasMethods and: [aClass wantsRecompilationProgressReported]) ifTrue:		[progress value: (currentClassIndex * 100) // maxClassIndex]! !ClassBuilder removeSelector: #informUserDuring:!